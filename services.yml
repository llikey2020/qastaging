include:
  - services/alluxio.yml
  - services/frontend.yml
  - services/metadata.yml
  - services/mysql.yml
  - services/schema.yml
  - services/zeppelin.yml

variables:
  CHARTS_DIR: charts
  OVERRIDES_FILE: overrides.yml

.generator:
  # extenders need to generate a file "deployment/${PROJECT}.yml"
  stage: prepare
  image: alpine
  rules:
    - if: '($DEPLOY_PROJECT == "${PROJECT}" || $DEPLOY_PROJECT == "all") && $ONLY_CLEANUP == "false"'
  variables: {}
    # PROJECT
  artifacts:
    paths:
      - ${DEPLOYMENTS_DIR}/${PROJECT}.yml

.helm-prepare:
  stage: prepare
  rules:
    - if: '($DEPLOY_PROJECT == "${PROJECT}" || $DEPLOY_PROJECT == "all") && $ONLY_CLEANUP == "false"'
  extends:
    - .package-pull
  variables: {}
    # SERVICE_NAME:
    # PACKAGE_NAME:
    # FILE_NAME:
    # PACKAGE_VERSION:
    # ID:
  before_script:
    - mkdir -p ${CHARTS_DIR}/${SERVICE_NAME}/
    - cd ${CHARTS_DIR}/${SERVICE_NAME}/
  artifacts:
    paths:
      - ${CHARTS_DIR}

Helm install all:
  # Install all helm charts
  stage: deploy-helm
  image: ${CI_REGISTRY}/planetrover/infrastructure/helm:3
  rules:
    - if: '$ONLY_CLEANUP == "false"'
  extends:
    - .environment
  script:
    - cd ${CHARTS_DIR}
    - |
      for SERVICE in $(ls) ; do
        helm upgrade --install --values ${SERVICE}/${OVERRIDES_FILE} ${SERVICE} ${SERVICE}/*.tgz
      done
